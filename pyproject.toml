[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.3",
  "hatchling>=1.12.2",
]

[project]
name = "pyproject_api"
description = "API to interact with the python pyproject.toml based projects"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [{ name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" }]
authors = [{ name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" }]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: tox",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "packaging>=23",
  'tomli>=2.0.1; python_version < "3.11"',
]
optional-dependencies.docs = [
  "furo>=2022.12.7",
  "sphinx>=6.1.3",
  "sphinx-autodoc-typehints!=1.23.4,>=1.22",
]
optional-dependencies.testing = [
  "covdefaults>=2.2.2",
  'importlib-metadata>=6; python_version < "3.8"',
  "pytest>=7.2.1",
  "pytest-cov>=4",
  "pytest-mock>=3.10",
  "virtualenv>=20.17.1",
  "wheel>=0.38.4",
]
urls.Homepage = "http://pyproject_api.readthedocs.org"
urls.Source = "https://github.com/tox-dev/pyproject-api"
urls.Tracker = "https://github.com/tox-dev/pyproject-api/issues"

[tool.hatch]
build.hooks.vcs.version-file = "src/pyproject_api/_version.py"
version.source = "vcs"

[tool.black]
line-length = 120

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]
report.fail_under = 88
report.omit = []
run.parallel = true
run.plugins = ["covdefaults"]

[tool.isort]
known_first_party = ["pyproject_api"]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
overrides = [{ module = ["virtualenv.*"], ignore_missing_imports = true }]

[tool.pep8]
max-line-length = "120"

[tool.flake8]
max-complexity = 22
max-line-length = 120
unused-arguments-ignore-abstract-functions = true
noqa-require-code = true
dictionaries = ["en_US", "python", "technical", "django"]
