[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.24.2",
]

[project]
name = "pyproject-api"
description = "API to interact with the python pyproject.toml based projects"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [
  { name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" },
]
authors = [
  { name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: tox",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "packaging>=24.1",
  "tomli>=2.0.1; python_version<'3.11'",
]
optional-dependencies.docs = [
  "furo>=2024.5.6",
  "sphinx-autodoc-typehints>=2.2.1",
]
optional-dependencies.testing = [
  "covdefaults>=2.3",
  "pytest>=8.2.2",
  "pytest-cov>=5",
  "pytest-mock>=3.14",
  "setuptools>=70.1",
]
urls.Homepage = "https://pyproject-api.readthedocs.io"
urls.Source = "https://github.com/tox-dev/pyproject-api"
urls.Tracker = "https://github.com/tox-dev/pyproject-api/issues"

[tool.hatch]
build.hooks.vcs.version-file = "src/pyproject_api/_version.py"
version.source = "vcs"

[tool.ruff]
target-version = "py38"
line-length = 120
format.preview = true
format.docstring-code-line-length = 100
format.docstring-code-format = true
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "ANN102", # Missing type annotation for `cls` in classmethod
  "ANN401", # Dynamically typed expressions
  "COM812", # Conflict with formatter
  "CPY",    # No copyright statements
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "INP001", # no implicit namespaces here
  "ISC001", # Conflict with formatter
  "S104",   # Possible binding to all interface
]
lint.per-file-ignores."src/pyproject_api/_backend.py" = [
  "ANN",
  "I002",
  "T201",
  "UP",
] # no type annotations
lint.per-file-ignores."src/pyproject_api/_backend.pyi" = [
  "E301",
  "E302",
] # https://github.com/astral-sh/ruff/issues/10077
lint.per-file-ignores."tests/**/*.py" = [
  "D",       # don't care about documentation in tests
  "FBT",     # don"t care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "PLC2701", # private imports
  "PLR0913", # too many positional arguments
  "PLR0917", # too many positional arguments
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S101",    # asserts allowed in tests...
  "S603",    # `subprocess` call: check for execution of untrusted input
]
lint.isort = { known-first-party = [
  "pyproject_api",
], required-imports = [
  "from __future__ import annotations",
] }
lint.preview = true

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
write-changes = true
count = true

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]
report.omit = [
]
run.parallel = true
run.plugins = [
  "covdefaults",
]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
overrides = [
  { module = [
    "virtualenv.*",
  ], ignore_missing_imports = true },
]
