[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.3",
  "hatchling>=1.18",
]

[project]
name = "pyproject-api"
description = "API to interact with the python pyproject.toml based projects"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [{ name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" }]
authors = [{ name = "Bern치t G치bor", email = "gaborjbernat@gmail.com" }]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: tox",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "packaging>=23.1",
  'tomli>=2.0.1; python_version < "3.11"',
]
optional-dependencies.docs = [
  "furo>=2023.8.19",
  "sphinx<7.2",
  "sphinx-autodoc-typehints>=1.24",
]
optional-dependencies.testing = [
  "covdefaults>=2.3",
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "pytest-mock>=3.11.1",
  "setuptools>=68.1.2",
  "wheel>=0.41.2",
]
urls.Homepage = "http://pyproject_api.readthedocs.org"
urls.Source = "https://github.com/tox-dev/pyproject-api"
urls.Tracker = "https://github.com/tox-dev/pyproject-api/issues"

[tool.hatch]
build.hooks.vcs.version-file = "src/pyproject_api/_version.py"
version.source = "vcs"

[tool.black]
line-length = 120

[tool.ruff]
select = ["ALL"]
line-length = 120
target-version = "py38"
isort = {known-first-party = ["pyproject_api"], required-imports = ["from __future__ import annotations"]}
ignore = [
  "INP001",  # no implicit namespaces here
  "ANN101",  # Missing type annotation for `self` in method
  "ANN102",  # Missing type annotation for `cls` in classmethod"
  "ANN401",  # Dynamically typed expressions
  "D203",  # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",  # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "S104",  # Possible binding to all interface
]
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "S101",  # asserts allowed in tests...
  "FBT",  # don"t care about booleans as positional arguments in tests
  "INP001", # no implicit namespace
  "D",  # don"t care about documentation in tests
  "S603",  # `subprocess` call: check for execution of untrusted input
  "PLR2004",  # Magic value used in comparison, consider replacing with a constant variable
]

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]
report.omit = []
run.parallel = true
run.plugins = ["covdefaults"]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
overrides = [{ module = ["virtualenv.*"], ignore_missing_imports = true }]
